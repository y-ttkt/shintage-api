version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: .docker/local/go/Dockerfile
    container_name: shintage-api-server
    stdin_open: true
    tty: true
    ports:
      - "8080:8080"
    volumes:
      - "./:/app"

  mysql:
    build:
      context: .
      dockerfile: ".docker/local/mysql/Dockerfile"
    container_name: shintage-api-server-mysql
    platform: linux/x86_64
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
    volumes:
      - ".docker/local/mysql/my.cnf:/etc/mysql/my.cnf"
      - ".mysql:/var/lib/mysql"

  redis:
    image: redis:6.2-buster
    container_name: shintage-api-server-redis
    ports:
      - "6379:6379"
    volumes:
      - .redis-data:/data

  minio:
    image: minio/minio:latest
    container_name: shintage-api-server-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: access_key
      MINIO_ROOT_PASSWORD: secret_key
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - .minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/ready"]
      interval: 5s
      timeout: 3s
      retries: 20

  create-bucket:
    image: minio/mc:latest
    container_name: shintage-api-server-create-bucket
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: |
      mc alias set minio http://minio:9000 access_key secret_key
      mc mb -p minio/public  || true
      mc mb -p minio/private || true
      # ポリシー設定（mcのバージョンによりコマンドが異なる）
      # 旧: mc policy set public minio/public
      # 新: 匿名ダウンロード許可
      mc anonymous set download minio/public
      mc anonymous set none     minio/private
